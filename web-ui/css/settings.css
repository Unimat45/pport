:root {
	--pad: 1rem;

	--dark: #333333;
	--light: #dadada;
	--alt-light: #f2f2f7;
	--alt-dark: #454545;

	--fg: var(--dark);
	--bg: var(--light);
	--alt-bg: var(--alt-light);
	--on: #95ff80;
	--off: #ff8080;
}

*,
*::before,
*::after {
	box-sizing: border-box;
	margin: 0;
	padding: 0;
}

html {
	font-size: 16px;
	font-family: Calibri, Arial, Helvetica, sans-serif;
}

body {
    overflow-x: hidden;
	padding: var(--pad);

	color: var(--fg);
	background: radial-gradient(circle at center, var(--alt-bg), var(--bg)), var(--bg);

	min-height: 100vh;
	min-height: 100dvh;

	display: grid;
	grid-template-columns: minmax(0, 1fr);
	grid-template-rows: auto 1fr;
}

body.dark {
	--bg: var(--dark);
	--fg: var(--light);
	--alt-bg: var(--alt-dark);
}

header {
    display: flex;
    align-items: center;
    justify-content: space-between;
}

#alert {
    position: absolute;
    top: -110%;
    left: 0;
    right: 0;

    color: #333333;
    background-color: var(--off);
    width: 100%;
    padding: var(--pad);

    text-align: center;

    transition: top 500ms ease-in-out;
}

#alert.show {
    top: 0;
}

#btn-dark {
	color: var(--fg);

	width: 5rem;

	border: none;
	background: none;

	cursor: pointer;

	animation: 1s ease-in-out infinite alternate forwards paused rotate;
}

#btn-dark.play {
	animation-play-state: running;
}

.back {
    display: block;
    width: 5rem;

    border: none;
    background: none;
}

.container {
	display: grid;
	grid-template-rows: auto 1fr auto;

	margin: 5rem auto 0 auto;
}

.container > *:not(:last-child) {
	margin-bottom: 2rem;
}

.wrap {
	display: grid;
	place-items: center;
}

.wrap > *:not(:last-child) {
	margin-bottom: 5rem;
}

#title {
	text-align: center;
	display: flex;
	align-items: center;
}

#title input {
    color: var(--fg);
	background: none;
	border: 1px solid var(--alt-light);
	padding: var(--pad);
	border-radius: calc(var(--pad) * 0.5);
}

#title[data-edit="true"] span {
	display: none;
}

#title[data-edit="false"] input {
	display: none;
}

#state {
	width: 100%;
	cursor: pointer;
	background: none;
	font-weight: bold;
	padding: var(--pad);
	border-radius: var(--pad);
	background-color: var(--off);
	border: 1px solid var(--alt-dark);
}

#state.click {
	background-color: var(--on);
}

.timing {
	display: flex;
	flex-direction: column;
	gap: calc(var(--pad) * 0.5);
	position: relative;
}

.timing:last-of-type {
	margin-bottom: 1rem;
}

.timing:not(:last-of-type) .separator {
	width: 100%;
	height: 1px;
	opacity: 0.35;

	background-color: var(--alt-light);
	margin: 1rem 0;
}

.timings {
	display: flex;
	flex-direction: column;
}

.months {
	display: grid;
	gap: 0.25rem;
	grid-template-columns: repeat(3, 1fr);
}

.save-timing,
.add-timing,
.months button {
	padding: var(--pad);

	color: var(--fg);
	background-color: var(--bg);

	cursor: pointer;
	border-radius: 1rem;
	border: 2px ridge var(--fg);

	transition: background-color 300ms ease-in-out, color 300ms ease-in-out, border-color 300ms ease-in-out;
}

.save-timing:hover,
.add-timing:hover,
.months button:hover,
.months button.on {
	color: var(--bg);
	border-color: var(--bg);
	background-color: var(--fg);
}

.time {
	align-self: center;
	text-align: center;
}

.state,
.time {
	width: 100%;
	border: 2px ridge var(--fg);
	border-radius: 0.5rem;

	padding: var(--pad);

	color: var(--fg);
	background-color: var(--bg);
}

.delete {
	font-size: 5rem;
	position: absolute;
	top: 0;
	bottom: 0;
	left: 0;
	transform: translateX(-125%);

	cursor: pointer;

	color: #ff5050;
	border: none;
	background: none;
}

.add-timing {
	width: 100%;
	font-size: 2rem;
}

@media screen and (min-width: 768px) {
	#btn-dark {
		position: absolute;
		top: var(--pad);
		right: var(--pad);
	}
    
    .back {
        position: absolute;
        top: var(--pad);
        left: var(--pad);
    }

	.months {
		grid-template-columns: repeat(6, 1fr);
	}

	.timings {
		min-width: 584px;
		gap: var(--pad);
	}

	.timing {
		flex-direction: row;
	}

	.separator {
		display: none;
	}

	.time {
		align-self: initial;
	}
}

@keyframes rotate {
	to {
		transform: rotateZ(180deg);
	}
}
